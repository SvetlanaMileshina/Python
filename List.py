'''
Создать телефонный справочник с
возможностью импорта и экспорта данных в
формате .txt. Фамилия, имя, отчество, номер
телефона - данные, которые должны находиться
в файле.
1. Программа должна выводить данные
2. Программа должна сохранять данные в
текстовом файле
3. Пользователь может ввести одну из
характеристик для поиска определенной
записи(Например имя или фамилию
человека)
4. Использование функций. Ваша программа
не должна быть линейной
'''
# 1. Создание файла+++: для того, чтобы режим считывания не выдавал ошибку
#     открыть файл на дозапись(режим а) +++
#     открывать с помощью оператора with open-сам закрывает файл
# 2. Добавление контакта:
#     запросить у пользователя данные+++
#     открыть файл на дозапись(режим а, если w-перезаписать, тоесть сотрет предыдущую запись)+++
#     добавить новый контактакт+++
# 3. Вывод данных в терминал:+++
#     открыть файл на чтение( режим r)+++
#     считать файл+++
#     вывести на экран+++
# 4. Поиск контакта:
#     выбор варианта поиска(по имени, по телефону)
#     запросить данные для поиска
#     открыть файл на чтение(r)
#     считываем данные( сохраняем в переменную)
#     осуществляем поиск данных( работаем с переменной)
#     вывести на экран найденный контакта
# 5. Создание UI(юзер- интерфейса)+++
#     вывести меню на экран +++
#     запросить у пользователя вариант действия+++
#     запустить соответствующую функцию +++
#     осуществить возможность выхода из программы +++
 
 
 
 
#2.Добавление контакта
     # запросить у пользователя данные
def  input_surname():
    return input('Введите фамилию контакта: ').title() # Заглавная большая, остальные маленькие
def  input_name():
    return input('Введите имя контакта: ').title()
def  input_patronymic():
    return input('Введите отчество контакта: ').title()
def  input_phone():
    return input('Введите телефон контакта: ')
def  input_address():
    return input('Введите адресс\ город контакта: ').title()
     # записываем функции в память
     
def create_contact():#Создаем переменные и вызываем эти функции, получаем данные для создания контакта и функция формирует f-строку 
    surname = input_surname()
    name = input_name()
    patronymic = input_patronymic()
    phone = input_phone()
    address = input_address()
    return f'{surname} {name} {patronymic}: {phone}\n{address}\n\n' #Возвращаем записанные переменные


def  add_contact(): # функция добавления нового контакта пункт 2
    contact_str = create_contact() #создаем контакт в виде строки
    with open("phonebook.txt",'a',encoding='utf-8') as file: # открыли файл на дозапись as file-файловый дескриптор, дозаписываем контакт str
        file.write(contact_str) # Добавляем новый контакт: строку с контактом  из return f'{surname} {name} {patronymic}: {phone}\n{address}\n\n'

def print_contacts(): # функция выведения на экран всех контактов
    # with open("phonebook.txt",'r',encoding='utf-8') as file: # откры  ли файл на чтение as file-файловый дескриптор
    #     print(file.read())
    with open("phonebook.txt",'r',encoding='utf-8') as file: # открываем файл на считывание,
            contacts_str = file.read()   #получаем весь текст в виде одной строки\ однострочник, но занимает несколько строк
    contacts_list = contacts_str.rstrip().split('\n\n')# переделываем строку контактов в список контактов, убираем двойной \n в конце,сплитуем по \n\n-через строку чтобы было
    for n,contact in enumerate(contacts_list, 1): # нумеруем список контактов начиная с 1,а не с 0.В n-номер контакта, в contact-сам контакт текущий, перебираем и 
        print(n,contact) # выводим на экран
def search_contact(): # функция поиск контакта пункт 4
    print ( # Выводим на экран возможные элементы поиска
            'Возможные варианты поиска: \n'
            '1 По фамилии\n'
            '2 По имени\n'
            '3 По отчеству \n'
            '4 По номеру телефона\n'
            '5 По адрессу(город)'
         ) 
        # создали переменную для запроса варианта поиска пункт 4
    var = input('Выберите вариант поиска:')#пользователь выбирает нужный вариант
    while var not in ('1','2','3','4','5'):# защита от некорректного ввода (not in - операторы вхождения и отрицания), не требует определения int, при такой записи кортежа пользователь вводит что угодно
        print('Некорректный ввод')
        var = input('Выберите вариант поиска')
    i_var = int(var) - 1 # преобразуем вариант пользователя в интовое значение и получаем Поиск по индексу  на единицу меньше
    
    search = input('Введите данные для поиска:').title()  #Получаем данные для поиска с большой буквы 
    with open("phonebook.txt",'r',encoding='utf-8') as file: # считываем файл
        contacts_str = file.read()   # сохраняем файл в строку
        contacts_list = contacts_str.rstrip().split('\n\n') # Преобразуем строку в список[](была строка с контактами, стал список с контактами),разделяем на контакты звпятыми с помощью функции split. Убираем ненужный пробел -функция strip, если rstrip- убираем пробелы только справа

    
    # Поиск данных в списке contact_list пункт 4
    for str_contact in contacts_list:# Перебираем контакты, преобразуем каждый контакт в список элементов контакта:строка фамилия, строка имя и т.д.
        lst_contact = str_contact.replace(':','').split()# В переменную lst_contact сохраняем данные контакта с заменой : и убираем \n\n
        if search in lst_contact[i_var]:# если  искомые данные есть в выбранном варианте lst-contact-список элементов контакта, то берем по индексу нужный элемент(фам илию,либо имя...) ['Иванов', 'Михаил', 'Петрович', '4953434596', 'Сочи']
            print(str_contact) # если совпадения есть, выводдим найденный контакт
    

# 1 Создание файла
def interfase():
    with open("phonebook.txt",'a',encoding='utf-8'): # откры  ли файл на дозапись
        pass # заглушка- создался файл, сразу закрылся, но теперь есть файл 
    # 5 создание UI
    
var = 0
while var != '4': #  зациклили программу, чтобы можно было выбрать не один раз, если выберет 4- закроет программу,реализует выход
    print ( # Вывести меню на экран
        'Возможные варианты:\n'
        '1 Дорбавить контакт\n'
        '2 Вывести на экран\n'
        '3 Поиск контакта \n'
        '4 Выход'
         ) 
        # создали переменную для запроса варианта действи
    var = input('Выберите вариант действия:')
    while var not in ('1','2','3','4'):# защита от некорректного ввода (not in - операторы вхождения и отрицания), не требует определения int, при такой записи кортежа пользователь вводит что угодно
            print('Некорректный ввод')
            var = input('Выберите вариант действия')
            
            # запуситить соответствующую функцию
    match var: #Конструкция match case-заменяет if(elif)
        case '1':
            add_contact() # функция добавления контакта
        case '2':
             print_contacts() # функция выведения на экран контаткта
        case '3':
             search_contact() # функция поиск контакта
        case '4':
            print('До свидания') # функцию не выводим, просто закрываем программу. Возможность выхода изпрограммы   
                
    
if __name__=='__main__': # для импорта, если импортировать файл, чтобы не запускать основной код
    interfase()